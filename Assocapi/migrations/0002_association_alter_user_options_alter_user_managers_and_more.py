# Generated by Django 4.1 on 2022-09-01 13:07

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('Assocapi', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Association',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nameassociation', models.CharField(blank=True, max_length=30)),
                ('emailassociation', models.EmailField(blank=True, max_length=250)),
                ('phoneassociation', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('addressassociation', models.CharField(blank=True, max_length=300, null=True)),
                ('cityassociation', models.CharField(blank=True, max_length=30, null=True)),
                ('Objectivesassociation', models.TextField(blank=True, null=True)),
                ('informationsassociation', models.TextField(blank=True, null=True)),
                ('logoassociation', models.ImageField(blank=True, null=True, upload_to='images/%Y/%m/%d')),
                ('is_association_accepted', models.BooleanField(default=False)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('nameassociation',),
            },
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'verbose_name': 'user', 'verbose_name_plural': 'users'},
        ),
        migrations.AlterModelManagers(
            name='user',
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='is_accepted',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='user',
            name='birth_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='date_joined',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined'),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(blank=True, max_length=254, verbose_name='email address'),
        ),
        migrations.AlterField(
            model_name='user',
            name='first_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='first name'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_superuser',
            field=models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status'),
        ),
        migrations.AlterField(
            model_name='user',
            name='last_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='last name'),
        ),
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username'),
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('status', models.BooleanField(default=False)),
                ('description', models.TextField()),
                ('post_image', models.ImageField(blank=True, null=True, upload_to='Post/%Y/%m/%d')),
                ('is_post_accepted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('assignee', models.ManyToManyField(related_name='name_association_post', to='Assocapi.association')),
            ],
            options={
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nameorganisation', models.CharField(blank=True, max_length=30, unique=True)),
                ('emailorganisation', models.EmailField(max_length=250, unique=True)),
                ('phoneorganisation', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('addressorganisation', models.CharField(blank=True, max_length=300, null=True)),
                ('cityorganisation', models.CharField(blank=True, max_length=30, null=True)),
                ('Objectivesorganisation', models.TextField(blank=True, null=True)),
                ('informationsorganisation', models.TextField(blank=True, null=True)),
                ('logoorganisation', models.ImageField(blank=True, null=True, upload_to='images/%Y/%m/%d')),
                ('is_organisation_accepted', models.BooleanField(default=False)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('president_of_organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='president_organisation', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Memberassociation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_member_association', models.CharField(blank=True, max_length=100, null=True)),
                ('association', models.ManyToManyField(related_name='name_association', to='Assocapi.association')),
                ('member_association', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_association', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='association',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_association', to=settings.AUTH_USER_MODEL),
        ),
    ]
